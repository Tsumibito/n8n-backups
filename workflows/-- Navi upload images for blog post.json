{
  "active": false,
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Find all images in HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Baserow upload ": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "url = None",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "url = None": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "url = baserow url": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Baserow upload ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find all images in HTML": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "url = baserow url",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "url = None",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Baserow files1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Baserow files1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Finish",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Finish",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-09T09:35:20.629Z",
  "id": "PHQQyHKIBZp4JTHv",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "-- Navi upload images for blog post",
  "nodes": [
    {
      "parameters": {},
      "id": "115a1fd4-35bf-413d-a8e6-05917566275d",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        1140,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f3f9ff3e-8cbc-4036-9b4e-181acba54408",
              "leftValue": "={{ $json}}",
              "rightValue": 0,
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "767790ab-f1c3-4e2d-ba2c-4dd72e370aa3",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1840,
        680
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.baserow.io/api/user-files/upload-via-url/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token cAkghBkNcvaZnJ0HJBBZAz5X8b7pxdBW"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $json.url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6482ada1-3eb2-4955-bf5a-2504f26ed046",
      "name": "Baserow upload ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1700,
        1140
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c01b8b3a-3d55-4ecf-91fc-de7f928099e2",
              "name": "url",
              "value": "None",
              "type": "string"
            },
            {
              "id": "6bd314fc-97eb-40b1-85e1-aada563b626f",
              "name": "name",
              "value": "none",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "cd7af652-9284-4b83-8ad9-07a128119aab",
      "name": "url = None",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2040,
        1480
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4327da2a-108d-4512-bf04-bed606902136",
              "name": "url",
              "value": "={{ $json.url }}",
              "type": "string"
            },
            {
              "id": "69c64f2c-09c3-4576-b4fd-375d1b03e1e3",
              "name": "name",
              "value": "={{ $json.name }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c6e5c842-edbb-4ed9-94ba-b119bcf50ac3",
      "name": "url = baserow url",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2200,
        1260
      ]
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "id": "7b967e54-47c6-416c-bc01-d31ebcc63286",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1180,
        1140
      ]
    },
    {
      "parameters": {
        "jsCode": "// Функция для извлечения URL изображений из HTML, исключая URL с \"baserow-backend-\"\nconst extractImageUrls = (html) => {\n  const urls = [];\n  const regex = /<img[^>]+src=[\"']([^\"']+)[\"']/g;\n  let match;\n\n  while ((match = regex.exec(html)) !== null) {\n    const url = match[1];\n    if (!url.includes(\"baserow-backend-\")) { // Исключаем URL с \"baserow-backend-\"\n      urls.push(url);\n    }\n  }\n\n  return urls;\n};\n\n// Инициализация массива для выходных элементов\nlet outputItems = [];\n\n// Итерация по всем входным элементам\nfor (let i = 0; i < items.length; i++) {\n  const currentItem = items[i].json;\n\n  // Получаем текущий HTML контент и ID\n  const currentHtml = currentItem[\"data\"];\n  const currentId = currentItem[\"id\"];\n\n  // Проверяем, что у нас есть и HTML, и ID\n  if (currentHtml && currentId) {\n    const imageUrls = extractImageUrls(currentHtml);\n\n    // Если изображения найдены, создаём пары [id, url]\n    if (imageUrls.length > 0) {\n      imageUrls.forEach(url => {\n        outputItems.push({\n          json: {\n            id: currentId,\n            url: url\n          }\n        });\n      });\n    } else {\n      // Если изображения не найдены, ничего не добавляем в outputItems\n      // Поскольку currentId всегда присутствует, нет необходимости сбрасывать переменные\n    }\n  }\n}\n\n// Возвращаем массив элементов с парами id и url\nreturn outputItems;\n"
      },
      "id": "ac61eba8-4ea7-42f5-8a03-2c02365a4e16",
      "name": "Find all images in HTML",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1500,
        680
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "databaseId": 139118,
        "tableId": 356544,
        "rowId": "={{ $('Execute Workflow Trigger').all()[0].json.id}}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": 2660471,
              "fieldValue": "={{ $json.baserow_array }}"
            }
          ]
        }
      },
      "id": "9f25572d-028f-4d92-92c1-ab45a1a440ba",
      "name": "Baserow files1",
      "type": "n8n-nodes-base.baserow",
      "typeVersion": 1,
      "position": [
        1840,
        920
      ],
      "credentials": {
        "baserowApi": {
          "id": "iKQh0Jcxz7wezRWR",
          "name": "Baserow account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "782a9536-d95f-45a7-9899-9c8c955182ae",
              "leftValue": "={{ $json.name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "70336799-4d43-4b69-96a8-1e911d18298a",
              "leftValue": "={{ $json.url }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e5e7a533-76c9-4bcc-beb6-fa51b74a09dd",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1920,
        1140
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем оригинальный HTML из узла 'Execute Workflow Trigger'\nconst triggerData = $(\"Execute Workflow Trigger\").all();\n\nlet originalHtml;\n\nif (triggerData && triggerData.length > 0) {\n  originalHtml = triggerData[0].json.data;\n} else {\n  throw new Error('No data found in Execute Workflow Trigger node.');\n}\n\n// Получаем список оригинальных URL изображений из узла 'Find all images in HTML'\nconst findImagesData = $(\"Find all images in HTML\").all();\n\nlet originalImageUrls; // Объявляем переменную вне блока if\n\nif (findImagesData && findImagesData.length > 0) {\n  originalImageUrls = findImagesData.map(item => item.json.url);\n} else {\n  throw new Error('No data found in Find all images in HTML node.');\n}\n\n// Получаем массивы новых URL и имен из узла 'Aggregate'\nconst aggregateDataArray = $(\"Aggregate\").all();\n\nlet aggregateData, newUrls, names; // Объявляем переменные вне блока if\n\nif (aggregateDataArray && aggregateDataArray.length > 0) {\n  aggregateData = aggregateDataArray[0].json;\n  newUrls = aggregateData.url;\n  names = aggregateData.name;\n} else {\n  throw new Error('No data found in Aggregate node.');\n}\n\n// Проверяем, что количество оригинальных URL и новых URL совпадает\nif (originalImageUrls.length !== newUrls.length) {\n  throw new Error('Количество оригинальных URL изображений и новых URL не совпадает.');\n}\n\n// Создаём карту соответствия между оригинальными и новыми URL\nconst urlMapping = {};\nfor (let i = 0; i < originalImageUrls.length; i++) {\n  urlMapping[originalImageUrls[i]] = {\n    newUrl: newUrls[i],\n    name: names[i]\n  };\n}\n\n// Функция для обработки HTML: замена URL изображений или удаление тегов <img>\nconst processHtml = (html, map) => {\n  return html.replace(/<img[^>]+src=[\"']([^\"']+)[\"'][^>]*>/g, (match, src) => {\n    const mapping = map[src];\n    if (mapping && mapping.newUrl && mapping.newUrl !== 'None') {\n      // Заменяем src на новый URL\n      return match.replace(src, mapping.newUrl);\n    } else {\n      // Удаляем <img> тег, если загрузка не удалась\n      return '';\n    }\n  });\n};\n\n// Обработка оригинального HTML\nconst updatedHtml = processHtml(originalHtml, urlMapping);\n\n// Создание массива успешно загруженных изображений для Baserow\nconst baserow_array = [];\nfor (let i = 0; i < newUrls.length; i++) {\n  const newUrl = newUrls[i];\n  const name = names[i];\n  if (newUrl && newUrl !== 'None') {\n    baserow_array.push({\n      url: newUrl,\n      name: name\n    });\n  }\n}\n\n// Возвращаем обновлённый HTML и массив изображений\nreturn [\n  {\n    json: {\n      data: updatedHtml,\n      baserow_array: baserow_array\n    }\n  }\n];\n"
      },
      "id": "e18f4df2-9837-4892-9813-3deb95648eda",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1540,
        960
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "url"
            },
            {
              "fieldToAggregate": "name"
            }
          ]
        },
        "options": {}
      },
      "id": "e43ed310-5cd2-45dd-a236-b13f44a7aa05",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1300,
        960
      ]
    },
    {
      "parameters": {},
      "id": "a54887c1-305f-4013-88df-c2c98eaf01fd",
      "name": "Finish",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2360,
        900
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "87dfb676-68f6-4a7f-8758-6927bbd9890b",
              "name": "data",
              "value": "={{ $('Code').item.json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "eed86923-3a5b-4c24-8804-aeae4c5d5b6e",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2080,
        960
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5faf23bf-56f4-4e33-bf78-b31c8bb1f503",
              "name": "data",
              "value": "={{ $('Execute Workflow Trigger').item.json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "373ba0a5-0922-4692-b9ed-4a79f2347bca",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2060,
        780
      ]
    }
  ],
  "pinData": {
    "Aggregate": [
      {
        "json": {
          "url": [
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/XzH39BpUiCVCdErCZvDnvhK8Zc52C9g1_e393cc67b6f599d1bfe0c3dc096b81a1999becbe3e0f48e7b374e4f9aa722eef.jpg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/46i2i6v0wsRdfiybrFAJwD0nOpWYC7fR_38e58ab0cc3e83e332013c2546bf5c5d0fbd4c717f35595c70ac692e08103f4e.jpg",
            "None",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/Kdu7HJBhtqDmIG8dd223tcbCtwZqbhoM_7b2d3f065340773f72c79470706fae9d7cbe6ff508118b28f23345a232955de1.png",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/fG7SppUxr3ro5xd6zuJMABfFxC220Wkc_8bf5289b44a4abdc47e50746ca925afdac2366b4608a08eced8c88e0bf575466.1ba90qoma4tqrzasvtqhc1qs70wj9u",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/eapxTj3dfA4sxvOpOjDiS34TDyrTA2lD_f0c4c54fd2e0324f3d142d12b0548be2dfa7208bed0f73badef37d324a35ff9c.jpg",
            "None",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/Sf1PVSvQj7CtA3ll2wBJ8ibcnxJkTSvh_0364fbc92fae499b55bd50eed740242908a5218405e7cdc0e822809671314b34.jpeg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/SNISkKysdcrgvvVDBMG5rl5QEcNgkrmR_78b24ee2e28fdb7bcbb9b69742209fd314640a23430875980ce0915648919594.jpeg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/TiOYp408TqAZEzPNMhhScGRDxF9sLMEs_a00ec13a330c47c24767bf2fdf408a9f0cb1dd8139820a7b90d3e58415f4e35b.jpeg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/gGNzLoE55jKjM2iXFRUdB9ubRvM4uKmo_4031316b8d7564979c911418caa380fc359285390c528367aa60b448c3a5a679.jpeg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/a4rKBEnv5i7wJiuUFvMKrK4DiUobDiFX_d85c03b0e8c1f34995e610aebd5123503f53da334edd21f3e39d27d02c052c04.",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/Jrd0YPaslg3xkBardx01Gidf6fNqtc0o_ebf56961d25ce102c52df95c6c8fd979e2d5544834f27dbf295bf96baa078cdf.jpg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/ABNxiGJjO3IXEoXezLlcRgHZereCnFuL_19ae86acc5864d0493caf3e3f7273540d4a2424e7ed5c4831cac073d76fc91d4.jpg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/l7MJM3nmlORuo4ezO2YOKGNu00C9ruUs_b0342b65957b52a5e1cbee8f8530646a48bd66cc86c7cba5f41f745f4f185ff9.jpg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/aRm9RWQfQPV6Xu8hxTV8UfjVul48UTUE_ef58d2749756da3adacf8b958c33916b596e7b673e4e73bb8e1bcc1f007dcc6e.jpeg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/4xNUgbLZMmBgUiHtwi3Q3AOWf9uSNjmh_6cf7c180ed5ca866c46e93e1a2479b24c746a928a97ff732ddff0ab6063d46f1.jpeg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/eM6REUSjlOk28RUrmIKxmkMR2pDeYLVa_3cd72496794494ffd1dc2ee645f6f27f3015f0149cc5a3164ddd983cdf568c48.jpg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/daCR3L6yAQPvjuR8ffz5pyk4RZQPTTu3_365df9714ec93455af126af95542cfc8a8b606424893182a2126b8bab94f05a2.jpg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/c78cGZHWsCOMgdl5EnvboQqBYAconvLo_67fc03c30f40a4e593fbbb10261c818defeb697bb0a351676c2fdf736e84b6a3.jpg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/3t0N2wsBKKiQfNT0BAg14sy4b4wNcXov_2a775bac698c53363b48c1c9c34287af2681845401af8b9fa01ea4969cb7f4dc.jpg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/cZNNZwD4nyqpf7HpPErruISlmRRJuSOO_6f9c963e9dc59d38076960de5335b94c9d66cc39ad1c55e9c1a036c97b9bb6ac.jpg",
            "https://baserow-backend-production20240528124524339000000001.s3.amazonaws.com/user_files/nEyBIWzUqYJGJva875AYSUTQAZpVsl7L_450de227e0be24b183dabaf639632872e869fd3835babd74c8847343876edb12.jpg"
          ],
          "name": [
            "XzH39BpUiCVCdErCZvDnvhK8Zc52C9g1_e393cc67b6f599d1bfe0c3dc096b81a1999becbe3e0f48e7b374e4f9aa722eef.jpg",
            "46i2i6v0wsRdfiybrFAJwD0nOpWYC7fR_38e58ab0cc3e83e332013c2546bf5c5d0fbd4c717f35595c70ac692e08103f4e.jpg",
            "none",
            "Kdu7HJBhtqDmIG8dd223tcbCtwZqbhoM_7b2d3f065340773f72c79470706fae9d7cbe6ff508118b28f23345a232955de1.png",
            "fG7SppUxr3ro5xd6zuJMABfFxC220Wkc_8bf5289b44a4abdc47e50746ca925afdac2366b4608a08eced8c88e0bf575466.1ba90qoma4tqrzasvtqhc1qs70wj9u",
            "eapxTj3dfA4sxvOpOjDiS34TDyrTA2lD_f0c4c54fd2e0324f3d142d12b0548be2dfa7208bed0f73badef37d324a35ff9c.jpg",
            "none",
            "Sf1PVSvQj7CtA3ll2wBJ8ibcnxJkTSvh_0364fbc92fae499b55bd50eed740242908a5218405e7cdc0e822809671314b34.jpeg",
            "SNISkKysdcrgvvVDBMG5rl5QEcNgkrmR_78b24ee2e28fdb7bcbb9b69742209fd314640a23430875980ce0915648919594.jpeg",
            "TiOYp408TqAZEzPNMhhScGRDxF9sLMEs_a00ec13a330c47c24767bf2fdf408a9f0cb1dd8139820a7b90d3e58415f4e35b.jpeg",
            "gGNzLoE55jKjM2iXFRUdB9ubRvM4uKmo_4031316b8d7564979c911418caa380fc359285390c528367aa60b448c3a5a679.jpeg",
            "a4rKBEnv5i7wJiuUFvMKrK4DiUobDiFX_d85c03b0e8c1f34995e610aebd5123503f53da334edd21f3e39d27d02c052c04.",
            "Jrd0YPaslg3xkBardx01Gidf6fNqtc0o_ebf56961d25ce102c52df95c6c8fd979e2d5544834f27dbf295bf96baa078cdf.jpg",
            "ABNxiGJjO3IXEoXezLlcRgHZereCnFuL_19ae86acc5864d0493caf3e3f7273540d4a2424e7ed5c4831cac073d76fc91d4.jpg",
            "l7MJM3nmlORuo4ezO2YOKGNu00C9ruUs_b0342b65957b52a5e1cbee8f8530646a48bd66cc86c7cba5f41f745f4f185ff9.jpg",
            "aRm9RWQfQPV6Xu8hxTV8UfjVul48UTUE_ef58d2749756da3adacf8b958c33916b596e7b673e4e73bb8e1bcc1f007dcc6e.jpeg",
            "4xNUgbLZMmBgUiHtwi3Q3AOWf9uSNjmh_6cf7c180ed5ca866c46e93e1a2479b24c746a928a97ff732ddff0ab6063d46f1.jpeg",
            "eM6REUSjlOk28RUrmIKxmkMR2pDeYLVa_3cd72496794494ffd1dc2ee645f6f27f3015f0149cc5a3164ddd983cdf568c48.jpg",
            "daCR3L6yAQPvjuR8ffz5pyk4RZQPTTu3_365df9714ec93455af126af95542cfc8a8b606424893182a2126b8bab94f05a2.jpg",
            "c78cGZHWsCOMgdl5EnvboQqBYAconvLo_67fc03c30f40a4e593fbbb10261c818defeb697bb0a351676c2fdf736e84b6a3.jpg",
            "3t0N2wsBKKiQfNT0BAg14sy4b4wNcXov_2a775bac698c53363b48c1c9c34287af2681845401af8b9fa01ea4969cb7f4dc.jpg",
            "cZNNZwD4nyqpf7HpPErruISlmRRJuSOO_6f9c963e9dc59d38076960de5335b94c9d66cc39ad1c55e9c1a036c97b9bb6ac.jpg",
            "nEyBIWzUqYJGJva875AYSUTQAZpVsl7L_450de227e0be24b183dabaf639632872e869fd3835babd74c8847343876edb12.jpg"
          ]
        }
      }
    ],
    "Execute Workflow Trigger": [
      {
        "json": {
          "id": "243",
          "data": "<p>Выбор подарка для яхтсмена может быть непростой задачей. Если вы хотите удивить своего друга или близкого человека, который увлекается яхтингом, то эта статья поможет вам с идеями. Мы собрали 25 интересных и полезных подарков, которые точно порадуют любого любителя моря и приключений.</p><p>Да, многие яхтсмены оценят уникальные подарки, сделанные своими руками, например, альбом с фотографиями путешествий.</p>"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-11-10T11:13:00.957Z",
      "updatedAt": "2024-11-10T11:13:00.957Z",
      "id": "UCWLA0c2FsmSKRso",
      "name": "sub"
    },
    {
      "createdAt": "2024-11-10T11:12:42.068Z",
      "updatedAt": "2024-11-10T11:12:42.068Z",
      "id": "vgr897z7Ao8rJnZh",
      "name": "navi"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-11-10T11:13:44.000Z",
  "versionId": "be061b1c-78fa-49ba-bdf4-17b27fb5ff44"
}